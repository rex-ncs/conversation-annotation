generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  password   String
  role       UserRole         @default(USER)
  created_at DateTime     @default(now())
  Annotation Annotation[]
}

model Metrics {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  definition String
  createdAt  DateTime     @default(now())
  Annotation Annotation[]
}

model Conversations {
  id                   String                 @id
  createdAt            DateTime               @default(now())
  ConversationMessages ConversationMessages[]
  Annotation           Annotation[]
}

model ConversationMessages {
  id             Int           @id @default(autoincrement())
  conversationId String
  conversation   Conversations @relation(fields: [conversationId], references: [id])
  turnNumber     Int
  role           Role
  content        String
  createdAt      DateTime      @default(now())
}

model Annotation {
  id             Int           @id @default(autoincrement())
  userId         Int
  user           Users         @relation(fields: [userId], references: [id])
  conversationId String
  conversation   Conversations @relation(fields: [conversationId], references: [id])
  metricId       Int
  metric         Metrics       @relation(fields: [metricId], references: [id])
  verdict        Verdict
  comments       String?
  createdAt      DateTime      @default(now())

  @@unique([userId, conversationId, metricId], name: "annotations_user_conversation_metric_unique")
}

enum UserRole {
  USER
  ADMIN
}

enum Role {
  user
  assistant
  system
}

enum Verdict {
  pass
  fail
}
